---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: api
data:
  mongo: db-mongodb.api.svc.cluster.local
  redis-url: redis-master.platform.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: api
  labels:
    app: orders
    type: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
        - name: orders
          image: registry.labs:5000/labs/ordersapi
          ports:
            - containerPort: 80
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-password
                  key: password
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: password
            - name: MONGO
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: mongo
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: redis-url

---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: orders
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orders
  namespace: api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /orders(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: orders
                port:
                  number: 80
