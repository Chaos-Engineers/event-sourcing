---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: orders-api
data:
  service: orders-api.orders
  mongo: db-mongodb.orders-api.svc.cluster.local
  redis-url: redis-master.platform.svc.cluster.local
  event-endpoint-event: |
    order.created.1        | +received     | - | -
    order.creationFailed.1 | +resend       | - | -
    order.validated.1      | +valid        | - | -
    order.invalid.1        | +invalid      | - | -
    order.authorised.1     | +authorised   | - | -
    order.unauthorised.1   | +unauthorised | - | -
    order.shipped.1        | +shipped      | - | -
    order.cancelled.1      | +cancelled    | - | -
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: orders-api
  labels:
    app: orders
    type: api
    name: orders-api
    sidecar: adaptor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      volumes:
      - name: registry
        configMap:
          name: config
          items:
            - key: event-endpoint-event
              path: "event-endpoint-event"
      containers:
      - name: main
        image: registry.labs:5000/labs/ordersapi
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        env:
        - name: MONGO
          valueFrom:
            configMapKeyRef:
              name: config
              key: mongo
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-db-password
              key: password
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: redis-url
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-password
              key: password
        - name: SERVICE
          valueFrom:
            configMapKeyRef:
              name: config
              key: service
      # - name: order-adaptor
      #   image: registry.labs:5000/labs/event-adaptor
      #   ports:
      #   - containerPort: 8080
      #   resources:
      #     limits:
      #       memory: "64Mi"
      #       cpu: "100m"
      #   volumeMounts:
      #   - name: registry
      #     mountPath: "/registry"
      #     readOnly: true
      #   env:
      #   - name: REDIS_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: redis-password
      #         key: password
      #   - name: REDIS_URL
      #     valueFrom:
      #       configMapKeyRef:
      #         name: config
      #         key: redis-url
      #   - name: SERVICE
      #     valueFrom:
      #       configMapKeyRef:
      #         name: config
      #         key: service
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: orders-api
spec:
  type: ClusterIP
  selector:
    app: orders
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orders
  namespace: orders-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /orders(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: orders
            port:
              number: 80
